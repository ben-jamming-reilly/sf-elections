generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Candidate {
  id           Int                       @id @default(autoincrement())
  slug         String                    @unique
  hash         String                    @unique
  name         String
  profileImg   String?                   @unique
  description  String
  hasFinished  Boolean                   @default(false)
  answers      CandidateQuestionAnswer[]
  voterMatches VoterCandidateMatch[]
}

model Voter {
  id               Int                   @id @default(autoincrement())
  hash             String                @unique
  age              Int?
  gender           String?
  state            String?
  isPartyMember    Boolean?
  hasAcceptedTos   Boolean?
  createdAt        DateTime              @default(now())
  answers          VoterQuestionAnswer[]
  candidateMatches VoterCandidateMatch[]
}

model VoterCandidateMatch {
  id                 Int       @id @default(autoincrement())
  voter              Voter     @relation(fields: [voterId], references: [id])
  voterId            Int
  candidate          Candidate @relation(fields: [candidateId], references: [id])
  candidateId        Int
  scorePercentageRaw Float

  @@index([voterId, candidateId])
  @@index([voterId])
  @@index([candidateId])
}

model CandidateQuestionAnswer {
  id                        Int       @id @default(autoincrement())
  candidate                 Candidate @relation(fields: [candidateId], references: [id])
  candidateId               Int
  question                  Question  @relation(fields: [questionId], references: [id])
  questionId                Int
  option                    Int?
  weighting                 Int?
  text                      String    @default("")
  changedQuestionDisclaimer String?

  @@index([candidateId, questionId])
  @@index([candidateId])
  @@index([questionId])
}

model VoterQuestionAnswer {
  id         Int      @id @default(autoincrement())
  voter      Voter    @relation(fields: [voterId], references: [id])
  voterId    Int
  question   Question @relation(fields: [questionId], references: [id])
  questionId Int
  option     Int?
  weighting  Int?
  skipped    Boolean  @default(false)

  @@index([voterId, questionId])
  @@index([voterId])
  @@index([questionId])
}

model Question {
  id          Int                       @id @default(autoincrement())
  title       String
  category    String                    @default("")
  description String                    @default("")
  type        String                    @default("YesNo")
  order       Int
  voters      VoterQuestionAnswer[]
  candidates  CandidateQuestionAnswer[]
}
