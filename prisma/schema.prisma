generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url = env("DATABASE_URL")
  relationMode = "prisma"
}

model Candidate {
  id          Int      @id @default(autoincrement())
  slug        String   @unique
  hash        String   @unique
  name        String
  profileImg String? @unique
  description String    @db.MediumText
  hasFinished  Boolean  @default(false)
  answers   CandidateQuestionAnswer[]
}

model Voter {
  id          Int      @id @default(autoincrement())
  hash        String   @unique
  answers   VoterQuestionAnswer[]
}

model CandidateQuestionAnswer {
  id          Int      @id @default(autoincrement())
  candidate       Candidate    @relation(fields: [candidateId], references: [id])
  candidateId     Int
  question    Question @relation(fields: [questionId], references: [id])
  questionId  Int
  option Int?
  weighting Int?
  text String @db.MediumText @default("")

  @@index([candidateId, questionId])
  @@index([candidateId])
  @@index([questionId])
}
model VoterQuestionAnswer {
  id          Int      @id @default(autoincrement())
  voter       Voter    @relation(fields: [voterId], references: [id])
  voterId     Int
  question    Question @relation(fields: [questionId], references: [id])
  questionId  Int
  option Int?
  weighting Int?
  skipped Boolean @default(false)

  @@index([voterId, questionId])
  @@index([voterId])
  @@index([questionId])
}

enum QuestionType {
  YesNo
  Range
  Wahlrecht
}

model Question {
  id         Int      @id @default(autoincrement())
  title      String @db.MediumText
  category   String @default("")
  description String    @db.MediumText @default("")
  type       QuestionType @default(YesNo)
  voters     VoterQuestionAnswer[]
  candidates CandidateQuestionAnswer[]
}